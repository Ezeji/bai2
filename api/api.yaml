openapi: 3.0.2
info:
  version: v1
  title: BAI2 API
  description: Moov Bai2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Bais files. BAI2- a widely accepted and used Bank Statement Format for Bank Reconciliation.
  contact:
    url: https://github.com/moov-io/bai2
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8208
    description: Local development

tags:
  - name: 'Bai2 Files'
    description: |
      BAI2 file format is a standardized set of codes which comes in text format.

paths:
  /health:
    get:
      tags: ['Bai2 Files']
      summary: health bai2 service
      description: Check the bai2 service to check if running
      operationId: health
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: 'health: true'

  /print:
    post:
      tags: ['Bai2 Files']
      summary: Print bai2 file after parse bin file
      description: Print bai2 file.
      operationId: print
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                input:
                  type: string
                  description: bai2 bin file
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: '01,0004,12345,060321,0829,001,80,1,2/
                
02,12345,0004,1,060317,,CAD,/

03,10200123456,CAD,040,+000000000000,,,045,+000000000000,,/

88,100,000000000208500,00003,V,060316,,400,000000000208500,00008,V,060316,/

16,409,000000000002500,V,060316,,,,RETURNED CHEQUE     /

16,409,000000000090000,V,060316,,,,RTN-UNKNOWN         /

16,409,000000000000500,V,060316,,,,RTD CHQ SERVICE CHRG/

16,108,000000000203500,V,060316,,,,TFR 1020 0345678    /

16,108,000000000002500,V,060316,,,,MACLEOD MALL        /

16,108,000000000002500,V,060316,,,,MASCOUCHE QUE       /

16,409,000000000020000,V,060316,,,,1000 ISLANDS MALL   /

16,409,000000000090000,V,060316,,,,PENHORA MALL        /

16,409,000000000002000,V,060316,,,,CAPILANO MALL       /

16,409,000000000002500,V,060316,,,,GALERIES LA CAPITALE/

16,409,000000000001000,V,060316,,,,PLAZA ROCK FOREST   /

49,+00000000000834000,000000014/

03,10200123456,CAD,040,+000000000000,,,045,+000000000000,,/

88,100,000000000111500,00002,V,060317,,400,000000000111500,00004,V,060317,/

16,108,000000000011500,V,060317,,,,TFR 1020 0345678    /

16,108,000000000100000,V,060317,,,,MONTREAL            /

16,409,000000000100000,V,060317,,,,GRANDFALL NB        /

16,409,000000000009000,V,060317,,,,HAMILTON ON         /

16,409,000000000002000,V,060317,,,,WOODSTOCK NB        /

16,409,000000000000500,V,060317,,,,GALERIES RICHELIEU  /

49,+00000000000446000,000000009/

98,+00000000001280000,000000002,000000025/

99,+00000000001280000,000000001,000000027/'
        '400':
          description: request
          content:
            text/plain:
              schema:
                type: string
                example: invalid file format

  /parse:
    post:
      tags: ['Bai2 Files']
      summary: Parse bai2 file after parse bin file
      description: parse bai2 file.
      operationId: parse
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                input:
                  type: string
                  description: bai2 bin file
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: valid file
        '400':
          description: request
          content:
            text/plain:
              schema:
                type: string
                example: invalid file format

  /format:
    post:
      tags: ['Bai2 Files']
      summary: Format bai2 file after parse bin file
      description: format bai2 file.
      operationId: format
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                input:
                  type: string
                  description: bai2 bin file
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: request
          content:
            text/plain:
              schema:
                type: string
                example: invalid file format

components:
  schemas:
    Account:
      properties:
        accountNumber:
          type: string
          example: "10200123456"
        currencyCode:
          type: string
          example: "CAD"
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/AccountSummary'
        accountControlTotal:
          type: string
          example: "+00000000000834000"
        numberOfRecords:
          type: integer
          example: 14
        Details:
          type: array
          items:
            $ref: '#/components/schemas/Detail'
    AccountSummary:
      properties:
        TypeCode:
          type: string
          example: "040"
        Amount:
          type: string
          example: "+000000000000"
        ItemCount:
          type: integer
          example: 0
        FundsType:
          $ref: '#/components/schemas/FundsType'
    Detail:
      properties:
        TypeCode:
          type: string
          example: "409"
        Amount:
          type: string
          example: "000000000002500"
        FundsType:
          $ref: '#/components/schemas/FundsType'
        BankReferenceNumber:
          type: string
          example: ""
        CustomerReferenceNumber:
          type: string
          example: ""
        Text:
          type: string
          example: "TFR 1020 0345678    "
    Distribution:
      properties:
        day:
          type: integer
        amount:
          type: integer
    File:
      properties:
        sender:
          type: string
          example: "0004"
        receiver:
          type: string
          example: "12345"
        fileCreatedDate:
          type: string
          example: "060321"
        fileCreatedTime:
          type: string
          example: "0829"
        fileIdNumber:
          type: string
          example: "001"
        physicalRecordLength:
          type: integer
          example: 80
        blockSize:
          type: integer
          example: 1
        versionNumber:
          type: integer
          example: 2
        fileControlTotal:
          type: string
          example: "+00000000001280000"
        numberOfGroups:
          type: integer
          example: 1
        numberOfRecords:
          type: integer
          example: 27
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    FundsType:
      properties:
        type_code:
          type: string
          example: "V"
        date:
          type: string
          example: "060316"
        time:
          type: string
        immediate_amount:
          type: string
        one_day_amount:
          type: string
        two_day_amount:
          type: string
        distribution_number:
          type: integer
        distributions:
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
    Group:
      properties:
        receiver:
          type: string
          example: "12345"
        originator:
          type: string
          example: "0004"
        groupStatus:
          type: integer
          example: 1
        asOfDate:
          type: string
          example: "060317"
        currencyCode:
          type: string
          example: "CAD"
        groupControlTotal:
          type: string
          example: "+00000000001280000"
        numberOfAccounts:
          type: integer
          example: 2
        numberOfRecords:
          type: integer
          example: 25
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'