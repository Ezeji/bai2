/*
BAI2 API

Moov Bai2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Bais files. BAI2- a widely accepted and used Bank Statement Format for Bank Reconciliation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AccountSummary struct for AccountSummary
type AccountSummary struct {
	TypeCode  *string    `json:"TypeCode,omitempty"`
	Amount    *string    `json:"Amount,omitempty"`
	ItemCount *int32     `json:"ItemCount,omitempty"`
	FundsType *FundsType `json:"FundsType,omitempty"`
}

// NewAccountSummary instantiates a new AccountSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSummary() *AccountSummary {
	this := AccountSummary{}
	return &this
}

// NewAccountSummaryWithDefaults instantiates a new AccountSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSummaryWithDefaults() *AccountSummary {
	this := AccountSummary{}
	return &this
}

// GetTypeCode returns the TypeCode field value if set, zero value otherwise.
func (o *AccountSummary) GetTypeCode() string {
	if o == nil || o.TypeCode == nil {
		var ret string
		return ret
	}
	return *o.TypeCode
}

// GetTypeCodeOk returns a tuple with the TypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummary) GetTypeCodeOk() (*string, bool) {
	if o == nil || o.TypeCode == nil {
		return nil, false
	}
	return o.TypeCode, true
}

// HasTypeCode returns a boolean if a field has been set.
func (o *AccountSummary) HasTypeCode() bool {
	if o != nil && o.TypeCode != nil {
		return true
	}

	return false
}

// SetTypeCode gets a reference to the given string and assigns it to the TypeCode field.
func (o *AccountSummary) SetTypeCode(v string) {
	o.TypeCode = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *AccountSummary) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummary) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *AccountSummary) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *AccountSummary) SetAmount(v string) {
	o.Amount = &v
}

// GetItemCount returns the ItemCount field value if set, zero value otherwise.
func (o *AccountSummary) GetItemCount() int32 {
	if o == nil || o.ItemCount == nil {
		var ret int32
		return ret
	}
	return *o.ItemCount
}

// GetItemCountOk returns a tuple with the ItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummary) GetItemCountOk() (*int32, bool) {
	if o == nil || o.ItemCount == nil {
		return nil, false
	}
	return o.ItemCount, true
}

// HasItemCount returns a boolean if a field has been set.
func (o *AccountSummary) HasItemCount() bool {
	if o != nil && o.ItemCount != nil {
		return true
	}

	return false
}

// SetItemCount gets a reference to the given int32 and assigns it to the ItemCount field.
func (o *AccountSummary) SetItemCount(v int32) {
	o.ItemCount = &v
}

// GetFundsType returns the FundsType field value if set, zero value otherwise.
func (o *AccountSummary) GetFundsType() FundsType {
	if o == nil || o.FundsType == nil {
		var ret FundsType
		return ret
	}
	return *o.FundsType
}

// GetFundsTypeOk returns a tuple with the FundsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummary) GetFundsTypeOk() (*FundsType, bool) {
	if o == nil || o.FundsType == nil {
		return nil, false
	}
	return o.FundsType, true
}

// HasFundsType returns a boolean if a field has been set.
func (o *AccountSummary) HasFundsType() bool {
	if o != nil && o.FundsType != nil {
		return true
	}

	return false
}

// SetFundsType gets a reference to the given FundsType and assigns it to the FundsType field.
func (o *AccountSummary) SetFundsType(v FundsType) {
	o.FundsType = &v
}

func (o AccountSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TypeCode != nil {
		toSerialize["TypeCode"] = o.TypeCode
	}
	if o.Amount != nil {
		toSerialize["Amount"] = o.Amount
	}
	if o.ItemCount != nil {
		toSerialize["ItemCount"] = o.ItemCount
	}
	if o.FundsType != nil {
		toSerialize["FundsType"] = o.FundsType
	}
	return json.Marshal(toSerialize)
}

type NullableAccountSummary struct {
	value *AccountSummary
	isSet bool
}

func (v NullableAccountSummary) Get() *AccountSummary {
	return v.value
}

func (v *NullableAccountSummary) Set(val *AccountSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSummary(val *AccountSummary) *NullableAccountSummary {
	return &NullableAccountSummary{value: val, isSet: true}
}

func (v NullableAccountSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
