/*
BAI2 API

Moov Bai2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Bais files. BAI2- a widely accepted and used Bank Statement Format for Bank Reconciliation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// FundsType struct for FundsType
type FundsType struct {
	TypeCode           *string        `json:"type_code,omitempty"`
	Date               *string        `json:"date,omitempty"`
	Time               *string        `json:"time,omitempty"`
	ImmediateAmount    *string        `json:"immediate_amount,omitempty"`
	OneDayAmount       *string        `json:"one_day_amount,omitempty"`
	TwoDayAmount       *string        `json:"two_day_amount,omitempty"`
	DistributionNumber *int32         `json:"distribution_number,omitempty"`
	Distributions      []Distribution `json:"distributions,omitempty"`
}

// NewFundsType instantiates a new FundsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundsType() *FundsType {
	this := FundsType{}
	return &this
}

// NewFundsTypeWithDefaults instantiates a new FundsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundsTypeWithDefaults() *FundsType {
	this := FundsType{}
	return &this
}

// GetTypeCode returns the TypeCode field value if set, zero value otherwise.
func (o *FundsType) GetTypeCode() string {
	if o == nil || o.TypeCode == nil {
		var ret string
		return ret
	}
	return *o.TypeCode
}

// GetTypeCodeOk returns a tuple with the TypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetTypeCodeOk() (*string, bool) {
	if o == nil || o.TypeCode == nil {
		return nil, false
	}
	return o.TypeCode, true
}

// HasTypeCode returns a boolean if a field has been set.
func (o *FundsType) HasTypeCode() bool {
	if o != nil && o.TypeCode != nil {
		return true
	}

	return false
}

// SetTypeCode gets a reference to the given string and assigns it to the TypeCode field.
func (o *FundsType) SetTypeCode(v string) {
	o.TypeCode = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *FundsType) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *FundsType) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *FundsType) SetDate(v string) {
	o.Date = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *FundsType) GetTime() string {
	if o == nil || o.Time == nil {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetTimeOk() (*string, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *FundsType) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *FundsType) SetTime(v string) {
	o.Time = &v
}

// GetImmediateAmount returns the ImmediateAmount field value if set, zero value otherwise.
func (o *FundsType) GetImmediateAmount() string {
	if o == nil || o.ImmediateAmount == nil {
		var ret string
		return ret
	}
	return *o.ImmediateAmount
}

// GetImmediateAmountOk returns a tuple with the ImmediateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetImmediateAmountOk() (*string, bool) {
	if o == nil || o.ImmediateAmount == nil {
		return nil, false
	}
	return o.ImmediateAmount, true
}

// HasImmediateAmount returns a boolean if a field has been set.
func (o *FundsType) HasImmediateAmount() bool {
	if o != nil && o.ImmediateAmount != nil {
		return true
	}

	return false
}

// SetImmediateAmount gets a reference to the given string and assigns it to the ImmediateAmount field.
func (o *FundsType) SetImmediateAmount(v string) {
	o.ImmediateAmount = &v
}

// GetOneDayAmount returns the OneDayAmount field value if set, zero value otherwise.
func (o *FundsType) GetOneDayAmount() string {
	if o == nil || o.OneDayAmount == nil {
		var ret string
		return ret
	}
	return *o.OneDayAmount
}

// GetOneDayAmountOk returns a tuple with the OneDayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetOneDayAmountOk() (*string, bool) {
	if o == nil || o.OneDayAmount == nil {
		return nil, false
	}
	return o.OneDayAmount, true
}

// HasOneDayAmount returns a boolean if a field has been set.
func (o *FundsType) HasOneDayAmount() bool {
	if o != nil && o.OneDayAmount != nil {
		return true
	}

	return false
}

// SetOneDayAmount gets a reference to the given string and assigns it to the OneDayAmount field.
func (o *FundsType) SetOneDayAmount(v string) {
	o.OneDayAmount = &v
}

// GetTwoDayAmount returns the TwoDayAmount field value if set, zero value otherwise.
func (o *FundsType) GetTwoDayAmount() string {
	if o == nil || o.TwoDayAmount == nil {
		var ret string
		return ret
	}
	return *o.TwoDayAmount
}

// GetTwoDayAmountOk returns a tuple with the TwoDayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetTwoDayAmountOk() (*string, bool) {
	if o == nil || o.TwoDayAmount == nil {
		return nil, false
	}
	return o.TwoDayAmount, true
}

// HasTwoDayAmount returns a boolean if a field has been set.
func (o *FundsType) HasTwoDayAmount() bool {
	if o != nil && o.TwoDayAmount != nil {
		return true
	}

	return false
}

// SetTwoDayAmount gets a reference to the given string and assigns it to the TwoDayAmount field.
func (o *FundsType) SetTwoDayAmount(v string) {
	o.TwoDayAmount = &v
}

// GetDistributionNumber returns the DistributionNumber field value if set, zero value otherwise.
func (o *FundsType) GetDistributionNumber() int32 {
	if o == nil || o.DistributionNumber == nil {
		var ret int32
		return ret
	}
	return *o.DistributionNumber
}

// GetDistributionNumberOk returns a tuple with the DistributionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetDistributionNumberOk() (*int32, bool) {
	if o == nil || o.DistributionNumber == nil {
		return nil, false
	}
	return o.DistributionNumber, true
}

// HasDistributionNumber returns a boolean if a field has been set.
func (o *FundsType) HasDistributionNumber() bool {
	if o != nil && o.DistributionNumber != nil {
		return true
	}

	return false
}

// SetDistributionNumber gets a reference to the given int32 and assigns it to the DistributionNumber field.
func (o *FundsType) SetDistributionNumber(v int32) {
	o.DistributionNumber = &v
}

// GetDistributions returns the Distributions field value if set, zero value otherwise.
func (o *FundsType) GetDistributions() []Distribution {
	if o == nil || o.Distributions == nil {
		var ret []Distribution
		return ret
	}
	return o.Distributions
}

// GetDistributionsOk returns a tuple with the Distributions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundsType) GetDistributionsOk() ([]Distribution, bool) {
	if o == nil || o.Distributions == nil {
		return nil, false
	}
	return o.Distributions, true
}

// HasDistributions returns a boolean if a field has been set.
func (o *FundsType) HasDistributions() bool {
	if o != nil && o.Distributions != nil {
		return true
	}

	return false
}

// SetDistributions gets a reference to the given []Distribution and assigns it to the Distributions field.
func (o *FundsType) SetDistributions(v []Distribution) {
	o.Distributions = v
}

func (o FundsType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TypeCode != nil {
		toSerialize["type_code"] = o.TypeCode
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.ImmediateAmount != nil {
		toSerialize["immediate_amount"] = o.ImmediateAmount
	}
	if o.OneDayAmount != nil {
		toSerialize["one_day_amount"] = o.OneDayAmount
	}
	if o.TwoDayAmount != nil {
		toSerialize["two_day_amount"] = o.TwoDayAmount
	}
	if o.DistributionNumber != nil {
		toSerialize["distribution_number"] = o.DistributionNumber
	}
	if o.Distributions != nil {
		toSerialize["distributions"] = o.Distributions
	}
	return json.Marshal(toSerialize)
}

type NullableFundsType struct {
	value *FundsType
	isSet bool
}

func (v NullableFundsType) Get() *FundsType {
	return v.value
}

func (v *NullableFundsType) Set(val *FundsType) {
	v.value = val
	v.isSet = true
}

func (v NullableFundsType) IsSet() bool {
	return v.isSet
}

func (v *NullableFundsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundsType(val *FundsType) *NullableFundsType {
	return &NullableFundsType{value: val, isSet: true}
}

func (v NullableFundsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
