/*
BAI2 API

Moov Bai2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Bais files. BAI2- a widely accepted and used Bank Statement Format for Bank Reconciliation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Account type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Account{}

// Account struct for Account
type Account struct {
	AccountNumber       *string          `json:"accountNumber,omitempty"`
	CurrencyCode        *string          `json:"currencyCode,omitempty"`
	Summaries           []AccountSummary `json:"summaries,omitempty"`
	AccountControlTotal *string          `json:"accountControlTotal,omitempty"`
	NumberOfRecords     *int32           `json:"numberOfRecords,omitempty"`
	Details             []Detail         `json:"Details,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount() *Account {
	this := Account{}
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *Account) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *Account) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *Account) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *Account) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *Account) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *Account) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetSummaries returns the Summaries field value if set, zero value otherwise.
func (o *Account) GetSummaries() []AccountSummary {
	if o == nil || IsNil(o.Summaries) {
		var ret []AccountSummary
		return ret
	}
	return o.Summaries
}

// GetSummariesOk returns a tuple with the Summaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetSummariesOk() ([]AccountSummary, bool) {
	if o == nil || IsNil(o.Summaries) {
		return nil, false
	}
	return o.Summaries, true
}

// HasSummaries returns a boolean if a field has been set.
func (o *Account) HasSummaries() bool {
	if o != nil && !IsNil(o.Summaries) {
		return true
	}

	return false
}

// SetSummaries gets a reference to the given []AccountSummary and assigns it to the Summaries field.
func (o *Account) SetSummaries(v []AccountSummary) {
	o.Summaries = v
}

// GetAccountControlTotal returns the AccountControlTotal field value if set, zero value otherwise.
func (o *Account) GetAccountControlTotal() string {
	if o == nil || IsNil(o.AccountControlTotal) {
		var ret string
		return ret
	}
	return *o.AccountControlTotal
}

// GetAccountControlTotalOk returns a tuple with the AccountControlTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAccountControlTotalOk() (*string, bool) {
	if o == nil || IsNil(o.AccountControlTotal) {
		return nil, false
	}
	return o.AccountControlTotal, true
}

// HasAccountControlTotal returns a boolean if a field has been set.
func (o *Account) HasAccountControlTotal() bool {
	if o != nil && !IsNil(o.AccountControlTotal) {
		return true
	}

	return false
}

// SetAccountControlTotal gets a reference to the given string and assigns it to the AccountControlTotal field.
func (o *Account) SetAccountControlTotal(v string) {
	o.AccountControlTotal = &v
}

// GetNumberOfRecords returns the NumberOfRecords field value if set, zero value otherwise.
func (o *Account) GetNumberOfRecords() int32 {
	if o == nil || IsNil(o.NumberOfRecords) {
		var ret int32
		return ret
	}
	return *o.NumberOfRecords
}

// GetNumberOfRecordsOk returns a tuple with the NumberOfRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetNumberOfRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfRecords) {
		return nil, false
	}
	return o.NumberOfRecords, true
}

// HasNumberOfRecords returns a boolean if a field has been set.
func (o *Account) HasNumberOfRecords() bool {
	if o != nil && !IsNil(o.NumberOfRecords) {
		return true
	}

	return false
}

// SetNumberOfRecords gets a reference to the given int32 and assigns it to the NumberOfRecords field.
func (o *Account) SetNumberOfRecords(v int32) {
	o.NumberOfRecords = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Account) GetDetails() []Detail {
	if o == nil || IsNil(o.Details) {
		var ret []Detail
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetDetailsOk() ([]Detail, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Account) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []Detail and assigns it to the Details field.
func (o *Account) SetDetails(v []Detail) {
	o.Details = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Account) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.Summaries) {
		toSerialize["summaries"] = o.Summaries
	}
	if !IsNil(o.AccountControlTotal) {
		toSerialize["accountControlTotal"] = o.AccountControlTotal
	}
	if !IsNil(o.NumberOfRecords) {
		toSerialize["numberOfRecords"] = o.NumberOfRecords
	}
	if !IsNil(o.Details) {
		toSerialize["Details"] = o.Details
	}
	return toSerialize, nil
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
